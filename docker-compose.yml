version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: devsmailgo-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: devsmailgo
      MYSQL_USER: devsmailgo
      MYSQL_PASSWORD: devsmailgo_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - devsmailgo-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: devsmailgo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - devsmailgo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10

  # API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: devsmailgo-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=devsmailgo
      - DB_PASSWORD=devsmailgo_password
      - DB_NAME=devsmailgo
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - ENVIRONMENT=development
      - LOG_LEVEL=debug
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - devsmailgo-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      timeout: 20s
      retries: 10
      start_period: 30s

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: devsmailgo-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
    networks:
      - devsmailgo-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  devsmailgo-network:
    driver: bridge 